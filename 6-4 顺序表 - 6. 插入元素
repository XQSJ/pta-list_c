6-4 顺序表 - 6. 插入元素
分数 10
作者 李祥
单位 湖北经济学院
请编写函数，在线性表(顺序表)指定位序处插入数据元素。

函数原型
void AListInsert(ALIST *list, int index, const LELEMENT *element);
说明：参数 list 是指示线性表(顺序表)的指针，index 是位序，element 是指示数据元素的指针。函数在 list 所指线性表位序 index 处插入 element 所指数据元素。

要求：假设线性表长度为 n (n≥0)，插入位序为 i，若 1≤i≤n+1，则在 i 处插入数据元素；否则报告错误：“不正确的位置!”，不插入数据元素。若动态数组已装满，则先调用 AListResize 函数将数组尺寸在原有基础上增加 AListIncrement，然后再插入数据元素。

在“AList.h”中声明此函数，在“AList.c”中编写此函数，打开“main.c”修改主函数来进行测试。

int main()
{
    int n, i;
    LELEMENT x;
    ALIST a;
    AListCreate(&a);
    scanf("%d", &n);
    while (n--)
    {
        scanf("%d", &i);
        LElementInput(&x);
        AListInsert(&a, i, &x);
    }
    for (i = 0; i < a.length; ++i)
    {
        if (i)
        {
            putchar(' ');
        }
        LElementOutput(&a.element[i]);
    }
    putchar('\n');
    AListDestroy(&a);
    return 0;
}
输入样例
24
1 3.8
2 6.5
5 4.7
0 9.2
3 7.1
4 0.9
1 2.8
7 1.8
4 8.3
9 7.6
5 3.1
2 9.6
3 7.9
1 8.7
8 0.4
3 6.2
9 1.7
6 4.5
7 5.2
7 1.6
2 9.5
9 2.4
8 4.7
7 5.6
输出样例
Incorrect index!
Incorrect index!
Incorrect index!
Incorrect index!
8.7 9.5 2.8 6.2 9.6 7.9 5.6 4.5 4.7 1.6 2.4 5.2 3.8 6.5 8.3 1.7 0.4 3.1 7.1 0.9
运行效果
24
1 3.8
2 6.5
5 4.7
Incorrect index!
0 9.2
Incorrect index!
3 7.1
4 0.9
1 2.8
7 1.8
Incorrect index!
4 8.3
9 7.6
Incorrect index!
5 3.1
2 9.6
3 7.9
1 8.7
8 0.4
3 6.2
9 1.7
6 4.5
7 5.2
7 1.6
2 9.5
9 2.4
8 4.7
7 5.6
8.7 9.5 2.8 6.2 9.6 7.9 5.6 4.5 4.7 1.6 2.4 5.2 3.8 6.5 8.3 1.7 0.4 3.1 7.1 0.9

答案：
void AListInsert(ALIST *list, int index, const LELEMENT *element)
{
    if((index>=1)&&(index<=list->length+1))
    {
        
       
        if(list->length==list->size)
        {
            
        list->size = list->size+AListIncrement;
        }
        
        ++list->length;
        for(int i=list->length-1;i>index-1;i--)
        {
            list->element[i] = list->element[i-1];
        }
        list->element[index-1] = *element;
    }
    else
        printf("Incorrect index!\n");
}
